namespace SpriteKind {
    export const player1 = SpriteKind.create()
    export const player2 = SpriteKind.create()
    export const Glas = SpriteKind.create()
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Glas, function (sprite, otherSprite) {
    info.setScore(0)
    otherSprite.destroy()
})
sprites.onOverlap(SpriteKind.Enemy, SpriteKind.Player, function (sprite, otherSprite) {
    game.over(false)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    info.changeScoreBy(1)
    otherSprite.destroy()
})
let eEnemy: Sprite = null
let dEnemy: Sprite = null
let Glas: Sprite = null
let Dåse: Sprite = null
let maxScore1 = 10
let maxScore = 80
tiles.setCurrentTilemap(tilemap`level1`)
info.startCountdown(45)
let mySprite = sprites.create(img`
    ........................
    ........................
    .......ff...............
    .....ff22ff.............
    ....ff2222ff............
    ....f222222f............
    ...ff222222ff...........
    ...eeeeeeeeee...........
    ...e22222222e...........
    ...fffeeeefff...........
    ....fbf44fbf............
    ....f1fddf1f............
    ....f4dddd4f............
    ....ff2222ff............
    .....f4554f.............
    .....ffffff.............
    ........................
    ........................
    ........................
    ........................
    ........................
    ........................
    ........................
    ........................
    `, SpriteKind.Player)
let projectile = sprites.createProjectileFromSprite(img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . 3 3 3 3 3 . . . . . . 
    . . . . . 3 3 3 3 3 . . . . . . 
    . . . . . 3 3 3 3 3 . . . . . . 
    . . . . . 3 3 3 3 3 . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `, mySprite, 50, 50)
tiles.placeOnRandomTile(mySprite, sprites.castle.tileGrass2)
controller.moveSprite(mySprite, 100, 100)
scene.cameraFollowSprite(mySprite)
for (let index = 0; index < maxScore; index++) {
    Dåse = sprites.create(img`
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....ffffffffffff....
        ...fffff2222fffff...
        ...fffff2222fffff...
        ...fffff2222fffff...
        ...ffffffffffffff...
        ...f111f11111111f...
        ...f1f1f1f1f1f1ff...
        ...f111f1f1f1f11f...
        ...ff11f1f1f1ff1f...
        ...ff11f1f1f1ff1f...
        ...f1111111f1f11f...
        ...ffffffffffffff...
        ...ffffffffffffff...
        ....................
        `, SpriteKind.Food)
    tiles.placeOnRandomTile(Dåse, sprites.castle.tileGrass1)
}
for (let index = 0; index < maxScore1; index++) {
    Glas = sprites.create(img`
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ......99999999......
        .....9999999999.....
        ......99999999......
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        ....................
        `, SpriteKind.Glas)
    tiles.placeOnRandomTile(Glas, sprites.castle.tileGrass3)
}
for (let index = 0; index < 1; index++) {
    dEnemy = sprites.create(img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f1111111df.......
        ......fd1111111ddf......
        ......fd111111dddf......
        ......fd111ddddddf......
        ......fd1dfbdfcdbf......
        ......fbddfcdfbbcf......
        .......f11111bbcf.......
        .......f1b1fffff........
        .......fbfc111bf........
        ........ff1b1bf.........
        .........fbfbf..........
        ..........ffff..........
        ........................
        ........................
        ........................
        ........................
        ........................
        `, SpriteKind.Enemy)
    tiles.placeOnRandomTile(dEnemy, sprites.castle.tileGrass3)
    dEnemy.follow(mySprite, 50)
}
for (let index = 0; index < 2; index++) {
    eEnemy = sprites.create(img`
        ........................
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......fc1111111f.......
        .......fcd1111111f......
        .......f1b1111dddf......
        .......ffcf11fcddf......
        .......f1111111bbf......
        .......fcbdb1b1fcf......
        .......fffbfbfdff.......
        ........ffffffff........
        ........ffffffff........
        ..........fffff.........
        ...........fff..........
        ........................
        ........................
        ........................
        ........................
        ........................
        `, SpriteKind.Enemy)
    tiles.placeOnRandomTile(eEnemy, sprites.swamp.swampTile1)
    eEnemy.follow(mySprite, 50)
}
game.onUpdate(function () {
    if (info.score() == maxScore) {
        game.over(true)
    }
})
